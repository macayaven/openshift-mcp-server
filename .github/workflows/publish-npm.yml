name: Publish to NPM

on:
  workflow_dispatch:
    inputs:
      registry:
        description: 'Choose NPM registry'
        required: true
        default: 'public'
        type: choice
        options:
        - public
        - github-packages
      suffix:
        description: 'Package suffix (e.g., openshift-ai)'
        required: true
        default: 'openshift-ai'
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: ${{ steps.registry.outputs.url }}

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Configure registry
      id: registry
      run: |
        if [ "${{ github.event.inputs.registry }}" = "github-packages" ]; then
          echo "url=https://npm.pkg.github.com/" >> $GITHUB_OUTPUT
          echo "scope=@macayaven" >> $GITHUB_OUTPUT
          echo "config=//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
        else
          echo "url=https://registry.npmjs.org/" >> $GITHUB_OUTPUT
          echo "scope=" >> $GITHUB_OUTPUT
          echo "config=//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> $GITHUB_OUTPUT
        fi

    - name: Get version
      id: version
      run: |
        VERSION=$(git describe --tags --always --dirty)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "npm_version=$(echo $VERSION | sed 's/^v//')" >> $GITHUB_OUTPUT

    - name: Prepare packages
      run: |
        chmod +x ./prepare-fork-npm.sh
        ./prepare-fork-npm.sh "${{ github.event.inputs.suffix }}"

    - name: Update versions
      run: |
        find npm -name "package.json" -exec sed -i 's/"version": ".*"/"version": "${{ steps.version.outputs.npm_version }}"/' {} \;

    - name: Build
      run: |
        make build-all-platforms

    - name: Copy binaries
      run: |
        make npm-copy-binaries

    - name: Setup .npmrc
      run: |
        cat > ~/.npmrc << EOF
        ${{ steps.registry.outputs.config }}
        EOF

    - name: Publish platform packages
      run: |
        set -e
        
        platforms=("darwin-amd64" "darwin-arm64" "linux-amd64" "linux-arm64" "windows-amd64" "windows-arm64")
        
        for platform in "${platforms[@]}"; do
          # Directory name is always kubernetes-mcp-server-$platform
          # Package name depends on registry type
          if [ "${{ github.event.inputs.registry }}" = "github-packages" ]; then
            package_name="@macayaven/kubernetes-mcp-server-$platform"
          else
            package_name="kubernetes-mcp-server-${{ github.event.inputs.suffix }}-$platform"
          fi
          
          echo "ðŸ“¦ Publishing $package_name from directory kubernetes-mcp-server-$platform..."
          
          cd "npm/kubernetes-mcp-server-$platform"
          npm publish --tag latest
          cd ../..
          
          echo "âœ… Published $package_name"
        done

    - name: Publish main package
      run: |
        echo "ðŸ“¦ Publishing main package..."
        
        # Copy required files
        cp README.md LICENSE npm/kubernetes-mcp-server/
        
        cd npm/kubernetes-mcp-server
        
        # Package name depends on registry type
        if [ "${{ github.event.inputs.registry }}" = "github-packages" ]; then
          package_name="@macayaven/kubernetes-mcp-server"
        else
          package_name="kubernetes-mcp-server-${{ github.event.inputs.suffix }}"
        fi
        
        echo "ðŸ“¦ Publishing $package_name..."
        npm publish --tag latest
        cd ../..
        
        echo "âœ… Published main package: $package_name"

    - name: Summary
      run: |
        echo "## ðŸŽ‰ Publishing Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ“¦ Package Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Registry**: ${{ github.event.inputs.registry }}" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.registry }}" = "github-packages" ]; then
          echo "- **Package**: `@macayaven/kubernetes-mcp-server`" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Package**: `kubernetes-mcp-server-${{ github.event.inputs.suffix }}`" >> $GITHUB_STEP_SUMMARY
        fi
        echo "- **Version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸš€ Installation" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.registry }}" = "github-packages" ]; then
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo 'npm config set @macayaven:registry https://npm.pkg.github.com/' >> $GITHUB_STEP_SUMMARY
          echo 'npm install @macayaven/kubernetes-mcp-server' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        else
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo 'npm install kubernetes-mcp-server-${{ github.event.inputs.suffix }}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### âœ… OpenShift AI Features" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ“Š Data Science Projects" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ¤– Models" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸš€ Applications" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ§ª Experiments" >> $GITHUB_STEP_SUMMARY
        echo "- âš¡ Pipelines" >> $GITHUB_STEP_SUMMARY